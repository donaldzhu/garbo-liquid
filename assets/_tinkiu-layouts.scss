@use 'tinkiu-sizes' as *;
@use 'tinkiu-colors' as *;
@use 'tinkiu-typography' as *;

@mixin square($size: 100%) {
  width: $size;
  height: $size;
}

@mixin flex($align: center, $justify: center) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: row;
}

@mixin flex-column($align: center, $justify: center) {
  @include flex($align, $justify);
  flex-direction: column;
}

@function full-width($vw: 100vw) {
  @return calc(#{$vw} - var(--page-margin-x) * 2);
}

@mixin fullscreen($flex-direction: column, $align: center, $justify: center) {
  width: 100vw;
  height: 100vh;
  min-height: max($fullscreen-height-min-vw, $fullscreen-height-min-px);
  max-height: min($fullscreen-height-max-vw, $fullscreen-height-max-px);
  flex-direction: $flex-direction;
}

@mixin shift-to-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin top-left($top: 0, $left: 0) {
  position: absolute;
  top: $top;
  left: $left;
}

@mixin top-right($top: 0, $right: 0) {
  position: absolute;
  top: $top;
  right: $right;
}

@function column-width($column-count, $full-width: var(--full-width)) {
  $single-column-width: calc((#{$full-width} - (#{$total-columns} - 1) * var(--column-gap)) / #{$total-columns});
  @return calc(#{$single-column-width} * #{$column-count} + var(--column-gap) * (#{$column-count} - 1));
}

@function side-info-column-width($column-count, $full-width: var(--side-info-width)) {
  $single-column-width: calc((#{$full-width} - (#{$side-info-columns} - 1) * var(--column-gap)) / #{$side-info-columns});
  @return calc(#{$single-column-width} * #{$column-count} + var(--column-gap) * (#{$column-count} - 1));
}

@function border($color: $red) {
  @return $color 1px solid;
}

@mixin details {
  @include flex(flex-start, flex-start);
  flex-wrap: wrap;
  width: var(--side-info-width);
  gap: var(--inner-column-gap);
  margin-top: var(--homepage-stories-details-margin-top);

  p {
    margin: 0;
    @include detail-caption;
  }

  >div {
    @include flex-column(flex-start, flex-start);
    width: side-info-column-width(2);

    p:first-child {
      @include detail-label;
    }
  }
}

@mixin button {
  appearance: none;
  font-weight: bold;
  border: border();
  background-color: transparent;
  padding: var(--button-padding);
  border-radius: var(--button-radius);
  cursor: pointer;
  transition: all 0.1s ease-in-out;
  color: $red;

  &:hover {
    background-color: $red;
    color: $ash;
  }
}

@mixin cta-button {
  @include button;

  font-family: $font-family-body;
  font-size: var(--button-text);
  letter-spacing: 0;
  padding: var(--button-padding);
  border-radius: var(--button-radius);
  margin-top: var(--blurb-button-margin-top);
  text-transform: uppercase;
}

@mixin description {
  width: var(--side-info-width);
  max-width: var(--text-max-width);
  margin-top: var(--inner-section-spacing);

  &,
  & p {
    font-size: var(--small-copy);
    line-height: 1.4;
  }
}