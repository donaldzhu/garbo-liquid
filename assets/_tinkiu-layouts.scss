@use 'tinkiu-sizes' as *;
@use 'tinkiu-colors' as *;
@use 'tinkiu-typography' as *;

@mixin square($size: 100%) {
  width: $size;
  height: $size;
}

@mixin flex($align: center, $justify: center, $column: false, $flex-start: false, $gapped: false, $section-gapped: false, $full-screen: false, $full-width: false, $no-padding: false, $no-space: false) {
  display: flex;
  align-items: $align;
  justify-content: $justify;

  @if $column {
    flex-direction: column;
  }

  @else {
    flex-direction: row;
  }

  @if $flex-start {
    align-items: flex-start;
    justify-content: flex-start;
  }

  @if $gapped {
    gap: var(--column-gap);
  }

  @if $section-gapped {
    gap: var(--section-media-spacing);
  }

  @if $full-screen {
    width: 100vw;
  }

  @if $full-width {
    width: var(--full-width);
  }

  @if $no-padding {
    padding: 0;
  }

  @if $no-space {
    padding: 0;
    margin: 0;
  }
}

@function full-width($vw: 100vw) {
  @return calc(#{$vw} - var(--page-margin-x) * 2);
}

@mixin fullscreen($flex-direction: column) {
  width: 100vw;
  height: 100vh;
  min-height: max($fullscreen-height-min-vw, $fullscreen-height-min-px);
  max-height: min($fullscreen-height-max-vw, $fullscreen-height-max-px);
  flex-direction: $flex-direction;
}

@mixin shift-to-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin top-left($top: 0, $left: 0) {
  position: absolute;
  top: $top;
  left: $left;
}

@mixin top-right($top: 0, $right: 0) {
  position: absolute;
  top: $top;
  right: $right;
}

@function column-width($column-count, $full-width: var(--full-width)) {
  $single-column-width: calc((#{$full-width} - (#{$total-columns} - 1) * var(--column-gap)) / #{$total-columns});
  @return calc(#{$single-column-width} * #{$column-count} + var(--column-gap) * (#{$column-count} - 1));
}

@function side-info-column-width($column-count, $full-width: var(--side-info-width)) {
  $single-column-width: calc((#{$full-width} - (#{$side-info-columns} - 1) * var(--column-gap)) / #{$side-info-columns});
  @return calc(#{$single-column-width} * #{$column-count} + var(--column-gap) * (#{$column-count} - 1));
}

@function border($color: $red) {
  @return $color 1px solid;
}

@mixin details {
  @include flex($flex-start: true);
  flex-wrap: wrap;
  width: var(--side-info-width);
  gap: var(--inner-column-gap);
  margin-top: var(--large-inner-section-gap);

  p {
    margin: 0;
    @include detail-caption;
  }

  >div {
    @include flex($column: true, $flex-start: true);
    width: side-info-column-width(2);

    p:first-child {
      @include detail-label;
    }
  }
}

@mixin button {
  appearance: none;
  font-weight: bold;
  border: border();
  background-color: transparent;
  padding: var(--button-padding);
  border-radius: var(--button-radius);
  cursor: pointer;
  transition: all 0.1s ease-in-out;
  color: $red;

  &:hover {
    background-color: $red;
    color: $ash;
  }
}

@mixin ui {
  font-family: $font-family-body;
  font-size: var(--ui-small);
  letter-spacing: 0;
  text-transform: uppercase;
}

@mixin cta-button {
  @include button;
  @include ui;
  padding: var(--button-padding);
  border-radius: var(--button-radius);
  margin-top: var(--blurb-button-margin-top);

}

@mixin description {
  width: var(--side-info-width);
  max-width: var(--text-max-width);
  margin-top: var(--inner-section-spacing);

  &,
  & p {
    font-size: var(--small-copy);
    line-height: 1.4;
  }
}

@mixin no-focus-outline {

  &:focus,
  &:focus-visible {
    outline: none;
    box-shadow: none;
  }
}

@mixin underline($text-decoration: underline) {
  text-decoration: $text-decoration;
  text-decoration-thickness: 0.05em;
  text-underline-offset: 0.1em;
}

@mixin hover-underline($text-decoration: underline) {
  &:hover {
    @include underline($text-decoration);
  }
}